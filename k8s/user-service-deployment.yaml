apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: omni-server
spec:
  selector:
    app: user-service
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: omni-server
spec:
  replicas: 2  # Start with 2 replicas for high availability
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: gcr.io/YOUR_PROJECT_ID/user-service:latest  # Update with your GCP project ID
        ports:
        - containerPort: 8080
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: omni-config
              key: ENVIRONMENT
        - name: MODE
          valueFrom:
            configMapKeyRef:
              name: omni-config
              key: MODE
        - name: USER_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: omni-secrets
              key: USER_REDIS_PASSWORD
        - name: USER_REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: omni-config
              key: USER_REDIS_PORT
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /api/users
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/users
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
